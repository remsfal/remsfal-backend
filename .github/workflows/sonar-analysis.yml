name: "Sonar Analysis"

on:
  workflow_run:
    workflows: [CI Build]
    types: [completed]

permissions:
  contents: read
  actions: read # required for atifact download
  pull-requests: write # required to set PR status

jobs:
  sonar-cloud-analysis:
    name: "Sonar Cloud Build"
    runs-on: ubuntu-latest
    # dependabot should not have SONAR_TOKEN
    if: github.actor != 'dependabot[bot]' && github.repository_owner == 'remsfal' && github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout at triggering ref (read-only)
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
      - name: Download Coverage Report from CI Build
        uses: actions/download-artifact@v6
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: coverage-${{ github.event.workflow_run.id }}
          path: ${{ runner.temp }}/artifacts/coverage
      - name: Prepare coverage directory and move jacoco.xml
        run: |
          mkdir -p target/site/jacoco
          if [ -f "${{ runner.temp }}/artifacts/coverage/jacoco.xml" ]; then
            mv "${{ runner.temp }}/artifacts/coverage/jacoco.xml" target/site/jacoco/
          else
            echo "Error: jacoco.xml not found in coverage artifact." >&2
            exit 1
          fi
      - name: Download Checkstyle Report from CI Build
        uses: actions/download-artifact@v6
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: checkstyle-${{ github.event.workflow_run.id }}
          path: ${{ runner.temp }}/artifacts/checkstyle
      - name: Prepare checkstyle directory and move checkstyle-result.xml
        run: |
          mkdir -p checkstyle
          if [ -f "${{ runner.temp }}/artifacts/checkstyle/checkstyle-result.xml" ]; then
            mv "${{ runner.temp }}/artifacts/checkstyle/checkstyle-result.xml" target/
          else
            echo "Error: checkstyle-result.xml not found in checkstyle artifact." >&2
            exit 1
          fi
      - name: Download Compiled Classes from CI Build
        uses: actions/download-artifact@v6
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: binaries-${{ github.event.workflow_run.id }}
          path: ${{ runner.temp }}/artifacts/binaries
      - name: Move binaries in target only
        run: |
          find "${{ runner.temp }}/artifacts/binaries" -type d -name target | while read src; do
            rel=$(realpath --relative-to="${{ runner.temp }}/artifacts/binaries" "$src")
            mkdir -p "$rel"
            cp -R "$src/"* "$rel/"
          done

      # --- Sonar -> PULL REQUESTS ---
      - name: Find Pull Request for Branch
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        id: pr_by_branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          pr_json=$(gh pr list \
            --repo "${{ github.event.workflow_run.repository.full_name }}" \
            --head "$HEAD_BRANCH" \
            --state all \
            --json number,headRefName,baseRefName \
            --limit 1)
          echo "$pr_json"
          # set outputs
          echo "number=$(echo "$pr_json" | jq -r '.[0].number')" >> "$GITHUB_OUTPUT"
          echo "headRef=$(echo "$pr_json" | jq -r '.[0].headRefName')" >> "$GITHUB_OUTPUT"
          echo "baseRef=$(echo "$pr_json" | jq -r '.[0].baseRefName')" >> "$GITHUB_OUTPUT"
      - name: SonarCloud Scan (PR decoration)
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }} \
            -Dsonar.pullrequest.key=${{ steps.pr_by_branch.outputs.number }} \
            -Dsonar.pullrequest.branch=${{ steps.pr_by_branch.outputs.headRef }} \
            -Dsonar.pullrequest.base=${{ steps.pr_by_branch.outputs.baseRef }}
      # --- Sonar -> PUSH on main ---
      - name: SonarCloud Scan (main branch analysis)
        if: ${{ github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }} \
            -Dsonar.branch.name=main
